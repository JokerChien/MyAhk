CoordMode Mouse,Screen	; 将 Mouse 放置在相对于屏幕坐标的地方:
CoordMode ToolTip,Screen	; 将 ToolTips 放置在相对于屏幕坐标的地方:
SetDefaultMouseSpeed, 0

MissionStatus:=0 ; 0 任务停止 1 任务等待 2 已提交价格 3 任务结束。

Gui, Add, Button, x22  y10 w100 h30 ,	任务开始
Gui, Add, Button, x142 y10 w100 h30 , TIMER测试
Gui, Add, Button, x262 y10 w100 h30 , 任务停止
Gui, Add, Button, x382 y10 w100 h30 , 保存配置
Gui, Add, Tab, x0 y55 w855 h175 , 战斗界面|系统配置|策略设置
Gui, Add, Button, x692 y99  w60 h50 , +100
Gui, Add, Button, x692 y149 w60 h50 , -100
Gui, Add, Button, x632 y149 w60 h50 , -0.5s
Gui, Add, Button, x752 y149 w60 h50 , +0.5s
Gui, Add, GroupBox, x12 y99  w160 h50 , 本地时间
Gui, Add, GroupBox, x12 y159 w160 h50 , 任务时间
Gui, Add, GroupBox, x182 y99 w160 h50 , 我的价格
Gui, Add, GroupBox, x182 y159 w160 h50 , 我的策略

Gui, Add, Text, vMyPolice    x192 y179 w140 h30 , 暂无策略

gui,font,s12 bold
Gui, Add, Text, vLocalTime   x22  y119 w140 h20 , 任务未开启
gui,font,cRed s12 bold
Gui, Add, Text, vMissionTime x22  y179 w140 h20 , 任务未开启
Gui, Add, Text, vMyPrice     x192 y119 w140 h20 , 82600
gui,font

Gui, Add, Text, x365 y112 w60 h20 , 人肉输价格
Gui, Add, Text, x365 y142 w60 h20 , 人肉输延时

gui,font,cBlue s11 bold
Gui, Add, Edit, vMyManualPrice		x432 y109 w110 h20 , 82600	;手动输入价格。默认警示价价格
Gui, Add, Edit, vMyLag				x432 y139 w110 h20 , 0		;手动输入延时。默认为0。
gui,font

Gui, Add, Button, x432 y169 w110 h20 , 确定					;全部确定
Gui, Tab, 系统配置
Gui, Add, Text, x20 y105 w90 h20 , 1、“加价”按钮
Gui, Add, Text, x20 y135 w90 h20 , 2、“出价”按钮
Gui, Add, Text, x20 y165 w90 h20 , 3、请输入验证码
Gui, Add, Text, x20 y195 w90 h20 , 4、“确定”按钮
Gui, Add, Text, x440 y195 w120 h20 , 5、系统提示“确定”
gui,font,cBlue s12 bold
Gui, Add, Edit, vEditStp1 x135 y99  w100 h20 , None
Gui, Add, Edit, vEditStp2 x135 y129 w100 h20 , None
Gui, Add, Edit, vEditStp3 x135 y159 w100 h20 , None
Gui, Add, Edit, vEditStp4 x135 y189 w100 h20 , None
Gui, Add, Edit, vEditStp5 x560 y189 w100 h20 , None
gui,font
Gui, Add, Button, x240 y99  w100 h20 , 标记1
Gui, Add, Button, x240 y129 w100 h20 , 标记2
Gui, Add, Button, x240 y159 w100 h20 , 标记3
Gui, Add, Button, x240 y189 w100 h20 , 标记4
Gui, Add, Button, x240 y189 w100 h20 , 标记4
Gui, Add, Button, x665 y189 w100 h20 , 标记5

Gui, Add, Button, x345 y99  w80 h20 , 测试1
Gui, Add, Button, x345 y129 w80 h20 , 测试2
Gui, Add, Button, x345 y159 w80 h20 , 测试3
Gui, Add, Button, x345 y189 w80 h20 , 测试4
Gui, Add, Button, x770 y189 w80 h20 , 测试5

Gui, Add, CheckBox,vCheckBox_MZY gCheckBox_MZY x465 y99  w80 h20 , 价格瞄准仪
Gui, Add, Edit, vMZY_MsXY x560 y99 w100 h20 , 请点击标记
Gui, Add, Button, x665 y99 w100 h20 , 瞄准仪标记

Gui, Add, CheckBox,vCheckBox_ZD gCheckBox_ZD x465 y129 w80 h20 , 界面置顶
GuiControl ,,CheckBox_ZD,1	;界面置顶的勾给打上。
Gui +AlwaysOnTop				;界面初始状态设置为置顶。

Gui, Add, CheckBox,vCheckBox_LDTS gCheckBox_LDTS x465 y159 w80 h20 , 落点提示

;~ Gui, Add, CheckBox, x712 y169 w80 h20 , CheckBox
;~ Gui, Add, CheckBox, x612 y109 w80 h20 , CheckBox
;~ Gui, Add, CheckBox, x612 y139 w80 h20 , CheckBox
;~ Gui, Add, CheckBox, x612 y169 w80 h20 , CheckBox
Gui, Tab, 策略设置
;~ gui,font,

Gui, Add, Radio, vMyRadioGroup x30 y105 w120 h20, 时间提交模式
Gui, Add, Radio, x250 y105 w170 h20, 加号操作模式

Gui, Add, Text, x30 y135 w120 h20   ,1、出价时间  11:29:
;~ Gui, Add, Text, x30 y165 w120 h20   ,2、抬价尺度（作废）+
Gui, Add, Text, x30 y165 w120 h20   ,2、提交时间  11:29:
gui,font,cBlue s12 bold

Gui, Add, Edit, vActTimeSec1 x145 y130 w75 h20  , None
;~ Gui, Add, Edit, vAddPrice    x145 y160 w75 h20  , None
Gui, Add, Edit, vActTimeSec2 x145 y160 w75 h20  , None

gui,font
gui,font,s10 bold
;~ Gui, Add, Text, x250 y135 w120 h20   ,1、出价时间  11:29:
;~ Gui, Add, Text, x250 y165 w120 h20   ,2、抬价尺度      +
;~ Gui, Add, Text, x250 y195 w120 h20   ,3、提交价 = 当前价-
Gui, Add, Text, x250 y135 w160 h40   ,每按一次小键盘加号，执行一系列操作。整套动作往复循环。

;~ gui,font,cBlue s12 bold
;~ Gui, Add, Edit, vActTiming    x370 y130 w75 h20  , None
;~ Gui, Add, Edit, vAddPricing   x370 y160 w75 h20  , None
;~ Gui, Add, Edit, vActPricing   x370 y190 w75 h20  , None
gui, font,
Gui, Add, Button,        x475 y150 w80 h40 , 提交策略

; Generated using SmartGUI Creator 4.0
;~ Gui, Submit ; 保存每个与控件相关联的变量
Gui, Show, x176 y215 h214 w851, 四个六专业代拍服务 #20170414#194439
Return

Button任务停止:
MissionStatus:=0	; 0 任务停止 1 任务等待 2 已提交价格 3 任务结束
SetTimer,MyTimer,Off
Return

Button任务开始:
;~ MsgBox "任务开始了"
MissionStatus:=1	; 0 任务停止 1 任务等待 2 已提交价格 3 任务结束
SetTimer,MyTimer,80
Return


NumpadAdd::
if(MyRadioGroup=1 and MissionStatus>2){
	MissionStatus++
}else if(MyRadioGroup=2){
	MissionStatus++
}
Return

MyTimer:
FormatTime MyLocalTime,a_now,HH:mm:ss
GuiControl ,,LocalTime,%MyLocalTime% %A_MSec%	;本地时间更新。展示本地时间。
;==================上面的货色不用管，本地时间展示，和算法无关==================

StringMid cal_Mssn_Hour,a_now,9,2
StringMid cal_Mssn_Min,a_now,11,2
StringMid cal_Mssn_Sec,a_now,13,2
cal_Mssn_Time:=cal_Mssn_Hour*3600+cal_Mssn_Min*60+cal_Mssn_Sec+A_MSec/1000	;得到一个应用时间，值为实数。
cal_Mssn_Time+=MyLag															;应用时间调整到手动的修正状态。
;==================将应用时间与手动的时间修正结合==================

Prn_Mssn_Hour:=Floor(cal_Mssn_Time/3600)
Prn_Mssn_Min :=Floor(mod(cal_Mssn_Time,3600)/60)
Prn_Mssn_Sec :=mod(cal_Mssn_Time,60)
GuiControl ,,MissionTime,%Prn_Mssn_Hour%:%Prn_Mssn_Min%:%Prn_Mssn_Sec%
;==================将修正后的应用时间打印出来==================

;~ GetMissionTime:=a_now
;~ GetMissionTime+=Floor(A_MSec/1000+MyLag),Seconds			;减掉一个地板值。
;~ GetNewMsec:=A_MSec/1000+MyLag-Floor(A_MSec/1000+MyLag)	;减掉地板值结果必然为正数。
;~ GetNewMsec*=1000
;~ SetFormat Float,3.0
;~ GetNewMsec+=0	;将新的毫秒转换为整数。
;~ FormatTime MyMissionTime,%GetMissionTime%,HH:mm:ss
;~ GuiControl ,,MissionTime,%MyMissionTime% %GetNewMsec%
;~ StringMid meHr,GetMissionTime,9,2
;~ StringMid meMin,GetMissionTime,11,2
;~ StringMid meSec,GetMissionTime,13,2

if(MyRadioGroup=1){
	act_Time_1:=11*3600+29*60+ActTimeSec1
	act_Time_2:=11*3600+29*60+ActTimeSec2
;~ 	step1_secJudge:=meSec-ActTimeSec1+GetNewMsec/1000
;~ 	step2_secJudge:=meSec-ActTimeSec2+(GetNewMsec-ActTime_MSec2)/1000
	if(cal_Mssn_Time>=act_Time_1 and MissionStatus=1){
		Click %MsX_Stp_1%,%MsY_Stp_1%
		sleep 100
		Click %MsX_Stp_2%,%MsY_Stp_2%
		Loop 10{
			if(A_Index<20){
				Refreshing_Pic_X:=MsX_Stp_3-A_Index*40
			}else{
				Refreshing_Pic_X:=MsX_Stp_3-(40-A_Index)*40
			}
			
			Click %Refreshing_Pic_X%,%MsY_Stp_3%
;~ 			Sleep 15
		}
;~ 		Click %MsX_Stp_3%-20,%MsY_Stp_3%
;~ 		Click %MsX_Stp_3%-40,%MsY_Stp_3%
;~ 		Click %MsX_Stp_3%-60,%MsY_Stp_3%
		Click %MsX_Stp_3%,%MsY_Stp_3%
		MissionStatus++
	}else if(cal_Mssn_Time>=act_Time_2 and MissionStatus=2){
		Click %MsX_Stp_4%,%MsY_Stp_4%
		MissionStatus++
	}else if(MissionStatus>=4 and mod(MissionStatus,6)=4){	;4,10,16,22,28
		Click %MsX_Stp_5%,%MsY_Stp_5%
		MissionStatus++
	}else if(MissionStatus>=6 and mod(MissionStatus,6)=0){	;6,12,18,24,30
		Click %MsX_Stp_1%,%MsY_Stp_1%
		sleep 100
		Click %MsX_Stp_2%,%MsY_Stp_2%
		sleep 555
		Click %MsX_Stp_3%,%MsY_Stp_3%
		MissionStatus++
	}else if(MissionStatus>=8 and mod(MissionStatus,6)=2){	;8,14,20,26,32
		Click %MsX_Stp_4%,%MsY_Stp_4%
		MissionStatus++
	}
}else if(MyRadioGroup=2){

	if(Mod(MissionStatus,6)=2){	;1,7,13,19,25
		Click %MsX_Stp_1%,%MsY_Stp_1%	;加价按钮
		sleep 100
		Click %MsX_Stp_2%,%MsY_Stp_2%	;出价按钮。
		Loop 40{
			if(A_Index<20){
				Refreshing_Pic_X:=MsX_Stp_3+A_Index*10
			}else{
				Refreshing_Pic_X:=MsX_Stp_3+(40-A_Index)*10
			}
			
			Click %Refreshing_Pic_X%,%MsY_Stp_3%
			Sleep 15
		}
		Click %MsX_Stp_3%,%MsY_Stp_3%	;请输入验证码。
		MissionStatus++
	}else if(Mod(MissionStatus,6)=4){	;3,9,15,21,27
		Click %MsX_Stp_4%,%MsY_Stp_4%
		MissionStatus++
	}else if(MissionStatus>1 and Mod(MissionStatus,6)=0){		;5,11,17,23,29
		Click %MsX_Stp_5%,%MsY_Stp_5%
		MissionStatus++
	}
}
Return

Button确定:
Gui, Submit ,NoHide	;保存每个与控件相关联的变量
MyManualPrice:=MyManualPrice-mod(MyManualPrice,100)
GuiControl ,,MyPrice,%MyManualPrice%
GuiControl ,,MyManualPrice,%MyManualPrice%
Return

~up::
Button+100:
MyManualPrice+=100
GuiControl ,,MyPrice,%MyManualPrice%
GuiControl ,,MyManualPrice,%MyManualPrice%
Return

~Down::
Button-100:
MyManualPrice-=100
GuiControl ,,MyPrice,%MyManualPrice%
GuiControl ,,MyManualPrice,%MyManualPrice%
Return

~Left::
Button-0.5s:
GetMissionTime:=a_now
MyLag-=0.5
GetMissionTime+=%MyLag%,Seconds
FormatTime MyMissionTime,%GetMissionTime%,HH:mm:ss
GuiControl ,,MissionTime,%MyMissionTime%
SetFormat Float,0.1
MyLag+=0
GuiControl ,,MyLag,%MyLag%
Return

~Right::
Button+0.5s:
GetMissionTime:=a_now
MyLag+=0.5
GetMissionTime+=%MyLag%,Seconds
FormatTime MyMissionTime,%GetMissionTime%,HH:mm:ss
GuiControl ,,MissionTime,%MyMissionTime%
SetFormat Float,0.1
MyLag+=0
GuiControl ,,MyLag,%MyLag%
Return

Button标记1:
SetTimer ToolTipOfMus,32
KeyWait lbutton,d
SetTimer ToolTipOfMus,Off
ToolTip,,,,1
MouseGetPos MsX_Stp_1,MsY_Stp_1
;~ GetListViewStp1:=%MsX_Stp_1% , %MsX_Stp_1%
;~ MsgBox %MsX_Stp_1% , %MsY_Stp_1%
GuiControl ,,EditStp1,%MsX_Stp_1%,%MsY_Stp_1%
Return

Button标记2:
SetTimer ToolTipOfMus,32
KeyWait lbutton,d
SetTimer ToolTipOfMus,Off
ToolTip,,,,1
MouseGetPos MsX_Stp_2,MsY_Stp_2
;~ GetListViewStp1:=%MsX_Stp_1% , %MsX_Stp_1%
;~ MsgBox %MsX_Stp_2% , %MsY_Stp_2%
GuiControl ,,EditStp2,%MsX_Stp_2%,%MsY_Stp_2%
Return

Button标记3:
SetTimer ToolTipOfMus,32
KeyWait lbutton,d
SetTimer ToolTipOfMus,Off
ToolTip,,,,1
MouseGetPos MsX_Stp_3,MsY_Stp_3
;~ GetListViewStp1:=%MsX_Stp_1% , %MsX_Stp_1%
;~ MsgBox %MsX_Stp_3% , %MsY_Stp_3%
GuiControl ,,EditStp3,%MsX_Stp_3%,%MsY_Stp_3%
Return

Button标记4:
SetTimer ToolTipOfMus,32
KeyWait lbutton,d
SetTimer ToolTipOfMus,Off
ToolTip,,,,1
MouseGetPos MsX_Stp_4,MsY_Stp_4
;~ GetListViewStp1:=%MsX_Stp_1% , %MsX_Stp_1%
;~ MsgBox %MsX_Stp_4% , %MsY_Stp_4%
GuiControl ,,EditStp4,%MsX_Stp_4%,%MsY_Stp_4%
Return

Button标记5:
SetTimer ToolTipOfMus,32
KeyWait lbutton,d
SetTimer ToolTipOfMus,Off
ToolTip,,,,1
MouseGetPos MsX_Stp_5,MsY_Stp_5
;~ GetListViewStp1:=%MsX_Stp_1% , %MsX_Stp_1%
;~ MsgBox %MsX_Stp_4% , %MsY_Stp_4%
GuiControl ,,EditStp5,%MsX_Stp_5%,%MsY_Stp_5%
Return

Button瞄准仪标记:
SetTimer ToolTipOfMus,32
KeyWait lbutton,d
SetTimer ToolTipOfMus,Off
ToolTip,,,,1
MouseGetPos MsX_Stp_MZY,MsY_Stp_MZY
;~ GetListViewStp1:=%MsX_Stp_1% , %MsX_Stp_1%
;~ MsgBox %MsX_Stp_MZY% , %MsY_Stp_MZY%
GuiControl ,,MZY_MsXY,%MsX_Stp_MZY%,%MsY_Stp_MZY%
Return

ToolTipOfMus:
MouseGetPos TTMsx,TTMsY
ToolTip,"请点击目标位置",TTMsx+8,TTMsY,1
Return

GuiClose:
ExitApp

CheckBox_ZD:	;置顶多选框。
Gui, Submit ,NoHide	;保存每个与控件相关联的变量
if(CheckBox_ZD=1){
	Gui +AlwaysOnTop
}Else{
	Gui -AlwaysOnTop
}
Return

Button测试1:
Click %MsX_Stp_1%,%MsY_Stp_1%
Return

Button测试2:
Click %MsX_Stp_2%,%MsY_Stp_2%
Return

Button测试3:
Click %MsX_Stp_3%,%MsY_Stp_3%
Return

Button测试4:
Click %MsX_Stp_4%,%MsY_Stp_4%
Return

Button测试5:
Click %MsX_Stp_5%,%MsY_Stp_5%
Return

CheckBox_MZY:
Gui, Submit ,NoHide	;保存每个与控件相关联的变量
if(CheckBox_MZY=1){
	SetTimer MZY_Timer,32
}else{
	SetTimer MZY_Timer,Off
	ToolTip,,,,2
}
Return

MZY_Timer:
	MZY_cout := MyMissionTime . "`n" . MyManualPrice
	ToolTip,%MZY_cout%,%MsX_Stp_MZY%,%MsY_Stp_MZY%,2
Return

CheckBox_LDTS:
Gui, Submit ,NoHide	;保存每个与控件相关联的变量
if(CheckBox_LDTS=1){
	SetTimer LDTS_Timer,250
}else{
	SetTimer LDTS_Timer,Off
	ToolTip,,,,3
	ToolTip,,,,4
	ToolTip,,,,5
	ToolTip,,,,6
	ToolTip,,,,7
}
Return

LDTS_Timer:
	ToolTip,"落点1",%MsX_Stp_1%,%MsY_Stp_1%,3
	ToolTip,"落点2",%MsX_Stp_2%,%MsY_Stp_2%,4
	ToolTip,"落点3",%MsX_Stp_3%,%MsY_Stp_3%,5
	ToolTip,"落点4",%MsX_Stp_4%,%MsY_Stp_4%,6
	ToolTip,"落点5",%MsX_Stp_5%,%MsY_Stp_5%,7
Return

Button提交策略:
Gui, Submit ,NoHide	;保存每个与控件相关联的变量。
;~ MsgBox %ActTimeSec1% %AddPrice% %ActTimeSec2%
if(MyRadioGroup=1){
;~ 	ActTimeSec1:=Floor(ActTimeSec1)	;行动时间取整。

	AddPrice:=AddPrice-mod(AddPrice,100)	;加价幅度调整为100的倍数。
	
;~ 	ActTime_MSec2:=ActTimeSec2-Floor(ActTimeSec2)
;~ 	ActTime_MSec2*=1000	;把提交时间的毫秒求出来。
;~ 	SetFormat Float,3.0
;~ 	ActTime_MSec2+=0
;~ 	
;~ 	ActTimeSec2:=Floor(ActTimeSec2)
	
	GuiControl ,,ActTimeSec1	,%ActTimeSec1%
	GuiControl ,,AddPrice		,%AddPrice%
	GuiControl ,,ActTimeSec2	,%ActTimeSec2%
	GuiControl ,,MyPolice		,%ActTimeSec1%″提交 时价+%AddPrice%`n%ActTimeSec2%″确定
}else if(MyRadioGroup=2){
	GuiControl ,,MyPolice		,你选择了小键盘加号触发动作的模式。
}else{
	MsgBox 请选择策略模式
}
;~ MsgBox %MyRadioGroup%
Return

ButtonTIMER测试:
;~ FormatTime GetHr,A_Now,H
;~ FormatTime GetMin,A_Now,m
;~ FormatTime GetSec,A_Now,s
;~ Laggy:=(11-GetHr)*3600+(29-GetMin)*60+25-GetSec
;~ MyLag:=Laggy
StringMid cal_Mssn_Hour,a_now,9,2
StringMid cal_Mssn_Min,a_now,11,2
StringMid cal_Mssn_Sec,a_now,13,2
cal_Mssn_Time:=cal_Mssn_Hour*3600+cal_Mssn_Min*60+cal_Mssn_Sec+A_MSec/1000
Laggy:=11*3600+29*60+37-cal_Mssn_Time
MyLag:=Laggy
GuiControl ,,MyLag,%Laggy%

;~ FormatTime GetMissionTim2,20151031231059,HH:mm:ss
;~ aa:=Hours(GetMissionTime)
;~ FormatTime GetMissionTime,%GetMissionTime%,
;~ FormatTime GetMissionTime,%GetMissionTime%,HH:MM:SS
;~ FormatTime Now,%A_Index%,HH:MM:SS
;~ laggg:=A_Now-GetMissionTime

;~ MsgBox %Laggy%
;~ GetMissionTime:=a_now
;~ GetMissionTime+=Floor(A_MSec/1000+MyLag),Seconds	;减掉一个地板值。
;~ GetNewMsec:=A_MSec/1000+MyLag-Floor(A_MSec/1000+MyLag)	;减掉地板值结果必然为正数。
;~ GetNewMsec*=1000
;~ SetFormat Float,3.0
;~ GetNewMsec+=0	;将新的毫秒转换为整数。

;~ FormatTime MyMissionTime,%GetMissionTime%,HH:mm:ss
;~ GuiControl ,,MissionTime,%MyMissionTime% %GetNewMsec%
;~ MsgBox %A_yyyy%%A_MM%%A_DD%1129%ActTimeSec1%
Return

;~ Radio时间提交模式:
;~ MsgBox %MyRadioGroup%
;~ Return
;~ ==========================================================================
;~ 	  四个六沪牌抓取 #20170414#194420
;~ ==========================================================================